name: 'Code Tests'
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  pester:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Run Pester tests (pwsh)
      run: |
        Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
        Set-PSRepository psgallery -InstallationPolicy trusted
        Install-Module -Name Pester -RequiredVersion 5.0.4 -confirm:$false -Force
        Invoke-Pester -Path "tests"
      
      shell: pwsh
  
  # TODO: Troubleshoot pester on Windows PowerShell
  # test-posh:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Run Pester tests (PowerShell)
  #     run: |
  #       Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
  #       Set-PSRepository psgallery -InstallationPolicy trusted
  #       Install-Module -Name Pester -RequiredVersion 5.0.4 -Confirm:$false -Force
  #       Invoke-Pester -Path "tests"
  #       if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
  #     shell: powershell

  codecov:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: pester
        run: |
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -RequiredVersion 5.0.4 -Force;
          $paths = @(
            '.\CloudiQ\functions\*.ps1'
            '.\CloudiQ\functions\agreement\*.ps1'
            '.\CloudiQ\functions\organization\*.ps1'
            '.\CloudiQ\functions\subscription\*.ps1'
            '.\CloudiQ\functions\user\*.ps1'
            )
          Invoke-Pester -Path "tests" -CodeCoverage $paths -CodeCoverageOutputFileFormat "JaCoCo";
        shell: pwsh
      
      - name: Codecov
        uses: codecov/codecov-action@v1.0.13
        with:
          name: Cloud-iQ
          token: ${{ secrets.CODECOV }}
          file: coverage.xml
